(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{617:function(s,a,n){"use strict";n.r(a);var t=n(3),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"javascript数据结构与算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript数据结构与算法"}},[s._v("#")]),s._v(" JavaScript数据结构与算法")]),s._v(" "),n("h2",{attrs:{id:"数据结构与算法是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法是什么"}},[s._v("#")]),s._v(" 数据结构与算法是什么？")]),s._v(" "),n("h3",{attrs:{id:"数据结构与算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法"}},[s._v("#")]),s._v(" 数据结构与算法")]),s._v(" "),n("ul",[n("li",[s._v("数据结构：计算机存储、组织数据的方式")]),s._v(" "),n("li",[s._v("算法：一系列解决问题的清晰指令")])]),s._v(" "),n("h3",{attrs:{id:"数据结构与算法的关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法的关系"}},[s._v("#")]),s._v(" 数据结构与算法的关系")]),s._v(" "),n("ul",[n("li",[s._v("程序 = 数据结构 + 算法")]),s._v(" "),n("li",[s._v("数据结构为算法提供服务，算法围绕数据结构操作")])]),s._v(" "),n("h2",{attrs:{id:"空间复杂度阿和时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度阿和时间复杂度"}},[s._v("#")]),s._v(" 空间复杂度阿和时间复杂度")]),s._v(" "),n("h3",{attrs:{id:"时间复杂度是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度是什么"}},[s._v("#")]),s._v(" 时间复杂度是什么？")]),s._v(" "),n("ul",[n("li",[s._v("一个函数，用大O表示，比如O(1)、O(n)")]),s._v(" "),n("li",[s._v("定性描述该算法的运行时间")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b9d3c9e3410245aba720cb35ec8a407f~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d861975cb46c48ecbcb4943176f3ca98~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae0ff57611614be5a8d355aa2e202cb0~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8dcf4d1294b44d2ca76e1c32a180859e~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/175f8285ec284df3838a0072592feda6~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c34fb3efcb84e6ca40429d6d111d700~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"空间复杂度是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度是什么"}},[s._v("#")]),s._v(" 空间复杂度是什么？")]),s._v(" "),n("ul",[n("li",[s._v("一个函数，用大O表示，比如O(1)、O(n)")]),s._v(" "),n("li",[s._v("算法在运行过程中临时占用存储空间大小的量度")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db839bd0e1bd4fc1a2e9d87faf2755a4~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/70c5a463096045b08d3fa94051179df0~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e25e09fc8d0b49f9bc96272a8267f42d~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h2",{attrs:{id:"栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[s._v("#")]),s._v(" 栈")]),s._v(" "),n("ul",[n("li",[s._v("一个后进先出的数据结构")]),s._v(" "),n("li",[s._v("JavaScript中没有栈，但可以用Array实现栈的所有功能")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ee392a3b86f242689fc9565140d76b80~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const stack = [];\nstack.push(1);\nstack.push(2);\nconst item1 = stack.pop();\nconst item2 = stack.pop();\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"栈的应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈的应用场景"}},[s._v("#")]),s._v(" 栈的应用场景")]),s._v(" "),n("p",[s._v("需要后进先出的场景")]),s._v(" "),n("p",[s._v("比如：十进制转二进制、判断字符串的括号是否有效、函数调用堆栈等")]),s._v(" "),n("p",[s._v("十进制转二进制：")]),s._v(" "),n("ul",[n("li",[s._v("后出来的余数反而要排在前面")]),s._v(" "),n("li",[s._v("把余数一次入栈，然后在出栈，就可以实现余数倒序输出")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c4819cdfc8e9459b9c90fcbb58e17fa0~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[s._v("有效的括号：")]),s._v(" "),n("ul",[n("li",[s._v("越靠后的左括号，对应的右括号越靠前")]),s._v(" "),n("li",[s._v("左括号入栈，右括号出栈，最后栈空了就是合法的")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7151bdc1cadf44bbbf4c07d19799c42f~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[s._v("函数调用堆栈")]),s._v(" "),n("ul",[n("li",[s._v("最后调用的函数，最先执行完")]),s._v(" "),n("li",[s._v("JS解释器使用栈来控制函数的调用顺序")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/819f031c06a34a54838e8132f2bc31ea~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h2",{attrs:{id:"队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[s._v("#")]),s._v(" 队列")]),s._v(" "),n("ul",[n("li",[s._v("一个先进先出的数据结构")]),s._v(" "),n("li",[s._v("JavaScript中没有队列，但可以用Array实现队列的所有功能")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e5eaaebaaac4a7196dd00fa04ee3b46~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const queue = [];\nqueue.push(1);\nqueue.push(2);\nconst item1 = queue.shift();\nconst item2 = queue.shift();\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"什么场景用队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么场景用队列"}},[s._v("#")]),s._v(" 什么场景用队列？")]),s._v(" "),n("p",[s._v("需要先进先出的场景")]),s._v(" "),n("p",[s._v("比如：食堂排队打饭、JS异步中的任务队列、计算最近请求次数")]),s._v(" "),n("p",[s._v("JS异步中的任务队列：")]),s._v(" "),n("ul",[n("li",[s._v("JS是单线程，无法同时处理异步中的并发任务")]),s._v(" "),n("li",[s._v("使用任务队列先后处理异步任务")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/630ee34ac30347c68946aaa83883575e~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[s._v("计算最近请求次数")]),s._v(" "),n("ul",[n("li",[s._v("有新请求就入队，3000ms前发出的请求出队")]),s._v(" "),n("li",[s._v("队列的长度就是最近请求次数")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/54d9796e81f04aa991e82a986a7a5932~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h2",{attrs:{id:"链表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[s._v("#")]),s._v(" 链表")]),s._v(" "),n("ul",[n("li",[s._v("多个元素组成的列表")]),s._v(" "),n("li",[s._v("元素存储不连续，用next指针连在一起")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8282bfebf6814e3fa725b4bc5cc65852~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"数组vs链表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组vs链表"}},[s._v("#")]),s._v(" 数组vs链表")]),s._v(" "),n("ul",[n("li",[s._v("数组：增删非首尾元素时往往需要移动元素")]),s._v(" "),n("li",[s._v("链表：增删非首尾元素，不需要移动元素，只需要更改next的指针即可")])]),s._v(" "),n("h3",{attrs:{id:"js中的链表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js中的链表"}},[s._v("#")]),s._v(" JS中的链表")]),s._v(" "),n("ul",[n("li",[s._v("JavaScript中没有链表")]),s._v(" "),n("li",[s._v("可以用Object模拟链表")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const a = { val: 'a' };\nconst b = { val: 'b' };\nconst c = { val: 'c' };\nconst d = { val: 'd' };\na.next = b;\nb.next = c;\nc.next = d;\n\n//遍历链表\nlet p = a;\nwhile(p){\n  console.log(p.val);\n  p = p.next;\n}\n\n//插入\nconst e = { val: 'e' };\nc.next = e;\ne.next = d;\n\n//删除\nc.next = d;\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("h2",{attrs:{id:"集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[s._v("#")]),s._v(" 集合")]),s._v(" "),n("ul",[n("li",[s._v("一种无序且唯一的数据结构")]),s._v(" "),n("li",[s._v("ES6中有集合，名为Set")]),s._v(" "),n("li",[s._v("集合的常用操作，去重、判断某元素是否在集合中、求交集等")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//去重\nconst arr = [1,1,2,2];\nconst arr2 = [...new Set(arr)];\n\n//判断元素是否在集合中\nconst set = new Set(arr);\nconst has = set.has(1);\n\n//求交集\nconst set2 = new Set([2,3]);\nconst set3 = new Set([...set].filter(item => set2.has(item)));\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h2",{attrs:{id:"字典"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[s._v("#")]),s._v(" 字典")]),s._v(" "),n("ul",[n("li",[s._v("与集合类似，字典也是一种存储唯一值的数据结构，但它是以键值对的形式来存储")]),s._v(" "),n("li",[s._v("ES6中有字典，名为Map")]),s._v(" "),n("li",[s._v("字典的常用操作：键值对的增删改查")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const m = new Map();\n\n//增\nm.set('a', 'aa');\nm.set('b', ''bb);\n\n//删\nm.delete('b');\n//删除所有\nm.clear();\n\n//改\nm.set('a', 'aaa');\n\n//查\nm.get('a');\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h2",{attrs:{id:"树"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[s._v("#")]),s._v(" 树")]),s._v(" "),n("ul",[n("li",[s._v("一种 "),n("code",[s._v("分层")]),s._v(" 数据的抽象模型")]),s._v(" "),n("li",[s._v("前端工作中常见的树包括：DOM树、级联选择、树形控件")]),s._v(" "),n("li",[s._v("JS中没有树，但是可以用Object和Array构建树")]),s._v(" "),n("li",[s._v("树的常用操作：深度/广度优先遍历、先中后序遍历")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("{\n  value: 'zhejiang',\n  label: 'zhejiang',\n  children: [\n    {\n      value: 'hangzhou',\n      label: 'hangzhou',\n      children: [\n        {\n          value: 'xihu',\n          label: 'West Lake'          \n        }\n      ]\n    }\n  ]\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"树的深度和广度优先遍历"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#树的深度和广度优先遍历"}},[s._v("#")]),s._v(" 树的深度和广度优先遍历")]),s._v(" "),n("h4",{attrs:{id:"深度优先遍历-尽可能深的搜索树的分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深度优先遍历-尽可能深的搜索树的分支"}},[s._v("#")]),s._v(" 深度优先遍历：尽可能深的搜索树的分支")]),s._v(" "),n("h4",{attrs:{id:"深度优先遍历过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深度优先遍历过程"}},[s._v("#")]),s._v(" 深度优先遍历过程：")]),s._v(" "),n("ul",[n("li",[s._v("访问根节点")]),s._v(" "),n("li",[s._v("对根节点的children挨个进行深度优先遍历")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ec15ba7de1549239377ed3717d89aaa~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//深度优先遍历dfs\nconst tree = {\n  val: "a",\n  children: [\n    {\n      val: "b",\n      children: [\n        {\n          val: "d",\n          children: [],\n        },\n        {\n          val: "e",\n          children: [],\n        },\n      ],\n    },\n    {\n      val: "c",\n      children: [\n        {\n          val: "f",\n          children: [],\n        },\n        {\n          val: "g",\n          children: [],\n        },\n      ],\n    },\n  ],\n};\n\nconst dfs = (root) => {\n  console.log(root.val);\n  root.children.forEach(dfs);\n};\n\ndfs(tree);\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("h4",{attrs:{id:"广度优先遍历-先访问离根节点最近到节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#广度优先遍历-先访问离根节点最近到节点"}},[s._v("#")]),s._v(" 广度优先遍历：先访问离根节点最近到节点")]),s._v(" "),n("h4",{attrs:{id:"广度优先遍历过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#广度优先遍历过程"}},[s._v("#")]),s._v(" 广度优先遍历过程：")]),s._v(" "),n("ul",[n("li",[s._v("新建一个队列，把根节点入队")]),s._v(" "),n("li",[s._v("把队头出队并访问")]),s._v(" "),n("li",[s._v("把队头的children挨个入队")]),s._v(" "),n("li",[s._v("重复第二、三步，直到队列为空")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b04767ce0f5f4c77bafc8df78630d6e3~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//广度优先遍历 bfs\nconst tree = {\n\tval: 'a',\n  children: [\n    {\n    \tval: 'b',\n      children: [\n        {\n        \tval: 'd',\n          children: []\n        },\n        {\n        \tval: 'e',\n          children: []\n        }\n      ]\n    },\n    {\n    \tval: 'c',\n      children: [\n        {\n        \tval: 'f',\n          children: []\n        },\n        {\n        \tval: 'g,\n          children: []\n        }\n      ]\n    }\n  ]\n}\n\nconst bfs = (root) => {\n\tconst q = [root];\n  while(q.length > 0) {\n  \tconst n = q.shift();\n    console.log(n.val);\n    n.children.forEach(child => {\n    \tq.push(child);\n    });\n  }\n}\n\nbfs(tree)\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("h3",{attrs:{id:"二叉树的先中后序遍历"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的先中后序遍历"}},[s._v("#")]),s._v(" 二叉树的先中后序遍历")]),s._v(" "),n("h4",{attrs:{id:"二叉树是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二叉树是什么"}},[s._v("#")]),s._v(" 二叉树是什么？")]),s._v(" "),n("ul",[n("li",[s._v("树中每个节点最多只能有两个子节点")]),s._v(" "),n("li",[s._v("在JS中通常用Object来模拟二叉树")])]),s._v(" "),n("h4",{attrs:{id:"先序遍历过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#先序遍历过程"}},[s._v("#")]),s._v(" 先序遍历过程：")]),s._v(" "),n("ul",[n("li",[s._v("访问根节点")]),s._v(" "),n("li",[s._v("对根节点的左子树进行先序遍历")]),s._v(" "),n("li",[s._v("对根节点的右子树进行先序遍历")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bf0322093c6e4973a5f2028b0344a2ab~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const bt = {\n  val: 1,\n  left: {\n    val: 2,\n    left: {\n      val: 3,\n      left: null,\n      right: null,\n    },\n    right: {\n      val: 4,\n      left: {\n        val: 5,\n        left: null,\n        right: null,\n      },\n      right: null,\n    },\n  },\n  right: {\n    val: 6,\n    left: {\n      val: 7,\n      left: null,\n      right: null,\n    },\n  },\n};\n\n//先序遍历\nconst preorder = (root) => {\n  if (!root) {\n    return;\n  }\n  console.log(root.val);\n  preorder(root.left);\n  preorder(root.right);\n};\npreorder(bt); // 1 2 3 4 5 6 7\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("h4",{attrs:{id:"中序遍历过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中序遍历过程"}},[s._v("#")]),s._v(" 中序遍历过程：")]),s._v(" "),n("ul",[n("li",[s._v("对根节点的左子树进行中序遍历")]),s._v(" "),n("li",[s._v("访问根节点")]),s._v(" "),n("li",[s._v("对根节点的右子树进行中序遍历")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0ce439cd74d242a0bcb5b30d9aca6d73~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const bt = {\n  val: 5,\n  left: {\n    val: 2,\n    left: {\n      val: 1,\n      left: null,\n      right: null,\n    },\n    right: {\n      val: 4,\n      left: {\n        val: 3,\n        left: null,\n        right: null,\n      },\n      right: null,\n    },\n  },\n  right: {\n    val: 6,\n    right: {\n      val: 7,\n      left: null,\n      right: null,\n    },\n  },\n};\n\n//中序遍历\nconst inorder = (root) => {\n  if (!root) {\n    return;\n  }\n  inorder(root.left);\n  console.log(root.val);\n  inorder(root.right);\n};\ninorder(bt); // 1 2 3 4 5 6 7\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("h4",{attrs:{id:"后序遍历流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#后序遍历流程"}},[s._v("#")]),s._v(" 后序遍历流程：")]),s._v(" "),n("ul",[n("li",[s._v("对根节点的左子树进行后序遍历")]),s._v(" "),n("li",[s._v("对根节点的右子树进行后序遍历")]),s._v(" "),n("li",[s._v("访问根节点")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfc5183e2622414f837432e05e10356d~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const bt = {\n  val: 7,\n  left: {\n    val: 4,\n    left: {\n      val: 1,\n      left: null,\n      right: null,\n    },\n    right: {\n      val: 3,\n      left: {\n        val: 2,\n        left: null,\n        right: null,\n      },\n      right: null,\n    },\n  },\n  right: {\n    val: 6,\n    right: {\n      val: 5,\n      left: null,\n      right: null,\n    },\n  },\n};\n\n//后序遍历\nconst postorder = (root) => {\n  if (!root) {\n    return;\n  }\n  postorder(root.left);\n  postorder(root.right);\n  console.log(root.val);\n};\npostorder(bt); // 1 2 3 4 5 6 7\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("h3",{attrs:{id:"二叉树的先中后序遍历-非递归版"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的先中后序遍历-非递归版"}},[s._v("#")]),s._v(" 二叉树的先中后序遍历（非递归版）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//先序遍历\nconst preorder = (root) => {\n  if (!root) {\n    return;\n  }\n  const stack = [root];\n  while (stack.length) {\n    const n = stack.pop();\n    console.log(n.val);\n    if (n.right) stack.push(n.right);\n    if (n.left) stack.push(n.left);\n  }\n};\n\n//中序遍历\nconst inorder = (root) => {\n  if (!root) {\n    return;\n  }\n  const stack = [];\n  let p = root;\n  while (stack.length || p) {\n    while (p) {\n      stack.push(p);\n      p = p.left;\n    }\n    const n = stack.pop();\n    console.log(n.val);\n    p = n.right;\n  }\n};\n\n//后序遍历\nconst postorder = (root) => {\n  if (!root) {\n    return;\n  }\n  const outputStack = [];\n  const stack = [root];\n  while (stack.length) {\n    const n = stack.pop();\n    outputStack.push(n);\n    if (n.left) stack.push(n.left);\n    if (n.right) stack.push(n.right);\n  }\n  while (outputStack.length) {\n    const n = outputStack.pop();\n    console.log(n.val);\n  }\n};\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br")])]),n("h2",{attrs:{id:"图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图"}},[s._v("#")]),s._v(" 图")]),s._v(" "),n("ul",[n("li",[s._v("图是"),n("code",[s._v("网络结构")]),s._v("的抽象模型,是一组由边连接的节点")]),s._v(" "),n("li",[s._v("图可以表示任何二元关系，比如道路、航班")]),s._v(" "),n("li",[s._v("JS中没有图，但是可以用Object和Array构建图")]),s._v(" "),n("li",[s._v("图的表示法：邻接矩阵、邻接表、关联矩阵")])]),s._v(" "),n("h3",{attrs:{id:"图的表示法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图的表示法"}},[s._v("#")]),s._v(" 图的表示法")]),s._v(" "),n("h4",{attrs:{id:"邻接矩阵"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#邻接矩阵"}},[s._v("#")]),s._v(" 邻接矩阵")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b41321b4ba8c466b9c1cef7b077f8e6d~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/080d3755b71b4ae5afaf4d34e46a178e~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h4",{attrs:{id:"邻接表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#邻接表"}},[s._v("#")]),s._v(" 邻接表")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89a7f151d0da4f0d9fcf84b5435cf45c~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/898c5a582c3c4685b79fecad11bbd29b~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"图的常用操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图的常用操作"}},[s._v("#")]),s._v(" 图的常用操作")]),s._v(" "),n("h4",{attrs:{id:"深度优先遍历-尽可能深的搜索图的分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深度优先遍历-尽可能深的搜索图的分支"}},[s._v("#")]),s._v(" 深度优先遍历：尽可能深的搜索图的分支")]),s._v(" "),n("h4",{attrs:{id:"深度优先遍历过程-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深度优先遍历过程-2"}},[s._v("#")]),s._v(" 深度优先遍历过程：")]),s._v(" "),n("ul",[n("li",[s._v("访问根节点")]),s._v(" "),n("li",[s._v("对根节点的"),n("code",[s._v("没访问过的相邻节点")]),s._v("挨个进行深度优先遍历")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0a9bbbc24b254555bf6afc828e8fbd05~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const graph = {\n  0: [1, 2],\n  1: [2],\n  2: [0, 3],\n  3: [3],\n};\n//图的深度优先遍历\nconst visited = new Set();\nconst dfs = (n) => {\n  console.log(n);\n  visited.add(n);\n  graph[n].forEach((c) => {\n    if (!visited.has(c)) {\n      dfs(c);\n    }\n  });\n};\n\ndfs(2); // 2 0 1 3\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h4",{attrs:{id:"广度优先遍历-先访问离根节点最近的节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#广度优先遍历-先访问离根节点最近的节点"}},[s._v("#")]),s._v(" 广度优先遍历：先访问离根节点最近的节点")]),s._v(" "),n("h4",{attrs:{id:"广度优先遍历过程-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#广度优先遍历过程-2"}},[s._v("#")]),s._v(" 广度优先遍历过程")]),s._v(" "),n("ul",[n("li",[s._v("新建一个队列，把根节点入队")]),s._v(" "),n("li",[s._v("把队头出队并访问")]),s._v(" "),n("li",[s._v("把队头的"),n("code",[s._v("没访问过的相邻节点")]),s._v("入队")]),s._v(" "),n("li",[s._v("重复二、三步，直到队列为空")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c49039ba21741e5a24cd05324e0b02a~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//图的广度优先遍历\nconst graph = {\n  0: [1, 2],\n  1: [2],\n  2: [0, 3],\n  3: [3],\n};\n//图的深度优先遍历\nconst visited = new Set();\nvisited.add(2);\nconst q = [2];\nconst bfs = (n) => {\n  while (q.length) {\n    const n = q.shift();\n    console.log(n);\n    graph[n].forEach((c) => {\n      if (!visited.has(c)) {\n        q.push(c);\n        visited.add(c);\n      }\n    });\n  }\n};\n\nbfs(2); // 2 0 3 1\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("h2",{attrs:{id:"堆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[s._v("#")]),s._v(" 堆")]),s._v(" "),n("ul",[n("li",[s._v("堆是一种特殊的完全二叉树")]),s._v(" "),n("li",[s._v("所有的节点都大于等于（最大堆）或小于等于（最小堆）它的子节点")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfc5d9efc1f24f69ab1af94414807fab~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}}),n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8c71aec0f85d47da8de0de8004492ed3~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("ul",[n("li",[s._v("JS中通常用数组表示堆")]),s._v(" "),n("li",[s._v("左侧子节点的位置是2*index + 1")]),s._v(" "),n("li",[s._v("右侧子节点的位置是2*index + 2")]),s._v(" "),n("li",[s._v("父节点位置是(index - 2)/2")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/836b0e6d8e0d4ace868c4df4f26b521c~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"堆的应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#堆的应用"}},[s._v("#")]),s._v(" 堆的应用")]),s._v(" "),n("ul",[n("li",[s._v("堆能高效、快速地找出最大值和最小值，时间复杂度：O(1)")]),s._v(" "),n("li",[s._v("找出第K个最大（小）元素")])]),s._v(" "),n("h4",{attrs:{id:"找出第k个最大-小-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#找出第k个最大-小-元素"}},[s._v("#")]),s._v(" 找出第K个最大（小）元素")]),s._v(" "),n("ul",[n("li",[s._v("构建一个最小堆，并将元素依次插入堆中")]),s._v(" "),n("li",[s._v("当堆的容量超过K，就删除堆顶")]),s._v(" "),n("li",[s._v("插入结束后，堆顶就是第K个最大元素")])]),s._v(" "),n("h2",{attrs:{id:"搜索排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#搜索排序"}},[s._v("#")]),s._v(" 搜索排序")]),s._v(" "),n("ul",[n("li",[s._v("排序：把某个乱序的数组变成升序或者降序的数组")]),s._v(" "),n("li",[s._v("搜索：找出数组中某个元素的下标")])]),s._v(" "),n("h3",{attrs:{id:"js中的排序和搜素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js中的排序和搜素"}},[s._v("#")]),s._v(" JS中的排序和搜素")]),s._v(" "),n("ul",[n("li",[s._v("JS中的排序：数组的sort方法")]),s._v(" "),n("li",[s._v("JS中的搜索：数组的indexOf方法")])]),s._v(" "),n("h3",{attrs:{id:"常见排序算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见排序算法"}},[s._v("#")]),s._v(" 常见排序算法")]),s._v(" "),n("ul",[n("li",[s._v("冒泡排序")]),s._v(" "),n("li",[s._v("选择排序")]),s._v(" "),n("li",[s._v("插入排序")]),s._v(" "),n("li",[s._v("归并排序")]),s._v(" "),n("li",[s._v("快速排序")])]),s._v(" "),n("h3",{attrs:{id:"常见搜索算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见搜索算法"}},[s._v("#")]),s._v(" 常见搜索算法")]),s._v(" "),n("ul",[n("li",[s._v("顺序搜索")]),s._v(" "),n("li",[s._v("二分搜索")])]),s._v(" "),n("h3",{attrs:{id:"javascript实现冒泡排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript实现冒泡排序"}},[s._v("#")]),s._v(" JavaScript实现冒泡排序")]),s._v(" "),n("h4",{attrs:{id:"冒泡排序的思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序的思路"}},[s._v("#")]),s._v(" 冒泡排序的思路")]),s._v(" "),n("ul",[n("li",[s._v("比较所有相邻元素，如果第一个比第二个大，则交换他们")]),s._v(" "),n("li",[s._v("一轮下来，可以保证最后一个数是最大的")]),s._v(" "),n("li",[s._v("执行n-1轮，就可以完成排序")])]),s._v(" "),n("h4",{attrs:{id:"冒泡排序代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序代码实现"}},[s._v("#")]),s._v(" 冒泡排序代码实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Array.prototype.bubbleSort = function () {\n  for (let i = 0; i < this.length - 1; i += 1) {\n    for (let j = 0; j < this.length - 1 - i; j += 1) {\n      if (this[j] > this[j + 1]) {\n        const temp = this[j];\n        this[j] = this[j + 1];\n        this[j + 1] = temp;\n      }\n    }\n  }\n};\n\nconst arr = [5, 4, 3, 2, 1];\narr.bubbleSort();\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h4",{attrs:{id:"冒泡排序的时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序的时间复杂度"}},[s._v("#")]),s._v(" 冒泡排序的时间复杂度")]),s._v(" "),n("ul",[n("li",[s._v("两个嵌套循环")]),s._v(" "),n("li",[s._v("时间复杂度：O(n^2)")])]),s._v(" "),n("h3",{attrs:{id:"javascript实现选择排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript实现选择排序"}},[s._v("#")]),s._v(" JavaScript实现选择排序")]),s._v(" "),n("h4",{attrs:{id:"选择排序的思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#选择排序的思路"}},[s._v("#")]),s._v(" 选择排序的思路")]),s._v(" "),n("ul",[n("li",[s._v("找到数组中的最小值，选中它并将其放置在第一位")]),s._v(" "),n("li",[s._v("接着找到第二小的值，选中它并将其放置在第二位")]),s._v(" "),n("li",[s._v("以此类推，执行n-1轮")])]),s._v(" "),n("h4",{attrs:{id:"选择排序代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#选择排序代码实现"}},[s._v("#")]),s._v(" 选择排序代码实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Array.prototype.selectionSort = function () {\n  for (let i = 0; i < this.length - 1; i += 1) {\n    let indexMin = i;\n    for (let j = i; j < this.length; j += 1) {\n      if (this[j] < this[indexMin]) {\n        indexMin = j;\n      }\n    }\n    if (indexMin !== i) {\n      const temp = this[i];\n      this[i] = this[indexMin];\n      this[indexMin] = temp;\n    }\n  }\n};\n\nconst arr = [5, 4, 3, 2, 1];\narr.selectionSort();\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h4",{attrs:{id:"选择排序的时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#选择排序的时间复杂度"}},[s._v("#")]),s._v(" 选择排序的时间复杂度")]),s._v(" "),n("ul",[n("li",[s._v("两个嵌套循环")]),s._v(" "),n("li",[s._v("时间复杂度：O(n^2)")])]),s._v(" "),n("h3",{attrs:{id:"javascript实现插入排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript实现插入排序"}},[s._v("#")]),s._v(" JavaScript实现插入排序")]),s._v(" "),n("blockquote",[n("p",[s._v("小型数组插入排序比冒泡排序和选择排序性能好")])]),s._v(" "),n("h4",{attrs:{id:"插入排序的思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序的思路"}},[s._v("#")]),s._v(" 插入排序的思路")]),s._v(" "),n("ul",[n("li",[s._v("从第二个数开始往前比")]),s._v(" "),n("li",[s._v("比它大的往后排")]),s._v(" "),n("li",[s._v("比此类推进行到最后一个数")])]),s._v(" "),n("h4",{attrs:{id:"插入排序代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序代码实现"}},[s._v("#")]),s._v(" 插入排序代码实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Array.prototype.insertionSort = function () {\n  for (let i = 1; i < this.length; i += 1) {\n    const temp = this[i];\n    let j = i;\n    while (j > 0) {\n      if (this[j - 1] > temp) {\n        this[j] = this[j - 1];\n      } else {\n        break;\n      }\n      j -= 1;\n    }\n    this[j] = temp;\n  }\n};\n\nconst arr = [5, 4, 3, 2, 1];\narr.insertionSort();\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h4",{attrs:{id:"插入排序的时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序的时间复杂度"}},[s._v("#")]),s._v(" 插入排序的时间复杂度")]),s._v(" "),n("ul",[n("li",[s._v("两个嵌套循环")]),s._v(" "),n("li",[s._v("时间复杂度：O(n^2)")])]),s._v(" "),n("h3",{attrs:{id:"javascript实现归并排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript实现归并排序"}},[s._v("#")]),s._v(" JavaScript实现归并排序")]),s._v(" "),n("h4",{attrs:{id:"归并排序的思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#归并排序的思路"}},[s._v("#")]),s._v(" 归并排序的思路")]),s._v(" "),n("ul",[n("li",[s._v("分：把数组劈成两半，再递归地对子数组进行"),n("code",[s._v("分")]),s._v("操作，直到分成一个个单独的树")]),s._v(" "),n("li",[s._v("合：把两个数合并为有序数组，再对有序数组进行合并，直到全部子数组合并为一个完成数组")])]),s._v(" "),n("h5",{attrs:{id:"合并两个有序数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#合并两个有序数组"}},[s._v("#")]),s._v(" 合并两个有序数组")]),s._v(" "),n("ol",[n("li",[s._v("新建一个空数组res,用于存放最终排序后的数组")]),s._v(" "),n("li",[s._v("比较两个有序数组的头部，较小者出队并推入res中")]),s._v(" "),n("li",[s._v("如果两个数组还有值，就重复第二步")])]),s._v(" "),n("h4",{attrs:{id:"归并排序代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#归并排序代码实现"}},[s._v("#")]),s._v(" 归并排序代码实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Array.prototype.mergeSort = function () {\n  const rec = (arr) => {\n    if (arr.length === 1) {\n      return arr;\n    }\n    const mid = Math.floor(arr.length / 2);\n    const left = arr.slice(0, mid);\n    const right = arr.slice(mid, arr.length);\n    const orderLeft = rec(left);\n    const orderRight = rec(right);\n    const res = [];\n    while (orderLeft.length || orderRight.length) {\n      if (orderLeft.length && orderRight.length) {\n        res.push(\n          orderLeft[0] < orderRight[0] ? orderLeft.shift() : orderRight.shift()\n        );\n      } else if (orderLeft.length) {\n        res.push(orderLeft.shift());\n      } else if (orderRight.length) {\n        res.push(orderRight.shift());\n      }\n    }\n    return res;\n  };\n  const res = rec(this);\n  res.forEach((n, i) => {\n    this[i] = n;\n  });\n};\n\nconst arr = [5, 4, 3, 2, 1];\narr.mergeSort();\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("h4",{attrs:{id:"归并排序的时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#归并排序的时间复杂度"}},[s._v("#")]),s._v(" 归并排序的时间复杂度")]),s._v(" "),n("ul",[n("li",[s._v("分的时间复杂度是O(logN)")]),s._v(" "),n("li",[s._v("合的时间复杂度是O(n)")]),s._v(" "),n("li",[s._v("时间复杂度：O(n*logN)")])]),s._v(" "),n("h3",{attrs:{id:"javascript实现快速排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript实现快速排序"}},[s._v("#")]),s._v(" JavaScript实现快速排序")]),s._v(" "),n("h4",{attrs:{id:"快速排序的思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速排序的思路"}},[s._v("#")]),s._v(" 快速排序的思路")]),s._v(" "),n("ul",[n("li",[s._v("分区：从数组中任意选择一个"),n("code",[s._v("基准")]),s._v("，所有比基准小的元素放在基准前面，比基准大的元素放在基准的后面")]),s._v(" "),n("li",[s._v("递归：递归地对基准前后的子树组进行分区")])]),s._v(" "),n("h4",{attrs:{id:"快速排序代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速排序代码实现"}},[s._v("#")]),s._v(" 快速排序代码实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Array.prototype.quickSort = function () {\n  const rec = (arr) => {\n    if (arr.length === 1) {\n      return arr;\n    }\n    const left = [];\n    const right = [];\n    const mid = arr[0];\n    for (let i = 1; i < arr.length; i += 1) {\n      if (arr[i] < mid) {\n        left.push(arr[i]);\n      } else {\n        right.push(arr[i]);\n      }\n    }\n    return [...rec(left), mid, ...rec(right)];\n  };\n  const res = rec(this);\n  res.forEach((n, i) => {\n    this[i] = n;\n  });\n};\n\nconst arr = [2, 4, 5, 3, 1];\narr.quickSort();\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("h4",{attrs:{id:"快速排序的时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速排序的时间复杂度"}},[s._v("#")]),s._v(" 快速排序的时间复杂度")]),s._v(" "),n("ul",[n("li",[s._v("递归的时间复杂度是O(logN)")]),s._v(" "),n("li",[s._v("分区操作的时间复杂度是O(n)")]),s._v(" "),n("li",[s._v("时间复杂度：O(n*logN)")])]),s._v(" "),n("h3",{attrs:{id:"javascript实现顺序搜索"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript实现顺序搜索"}},[s._v("#")]),s._v(" JavaScript实现顺序搜索")]),s._v(" "),n("h4",{attrs:{id:"顺序搜索的思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#顺序搜索的思路"}},[s._v("#")]),s._v(" 顺序搜索的思路")]),s._v(" "),n("ul",[n("li",[s._v("遍历数组")]),s._v(" "),n("li",[s._v("找到跟目标值相等的元素，就返回它的下标")]),s._v(" "),n("li",[s._v("遍历结束后，如果没有搜索到目标值，就返回-1")])]),s._v(" "),n("h4",{attrs:{id:"顺序搜索代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#顺序搜索代码实现"}},[s._v("#")]),s._v(" 顺序搜索代码实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Array.prototype.sequentialSearch = function (item) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === item) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst arr = [2, 4, 5, 3, 1];\nconst res = arr.sequentialSearch(3);\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h4",{attrs:{id:"顺序搜索的时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#顺序搜索的时间复杂度"}},[s._v("#")]),s._v(" 顺序搜索的时间复杂度")]),s._v(" "),n("ul",[n("li",[s._v("遍历数组是一个循环操作")]),s._v(" "),n("li",[s._v("时间复杂度：O(n)")])]),s._v(" "),n("h3",{attrs:{id:"javascript实现二分搜索"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript实现二分搜索"}},[s._v("#")]),s._v(" JavaScript实现二分搜索")]),s._v(" "),n("p",[s._v("二分搜索前提是数组有序")]),s._v(" "),n("h4",{attrs:{id:"二分搜索的思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二分搜索的思路"}},[s._v("#")]),s._v(" 二分搜索的思路")]),s._v(" "),n("ul",[n("li",[s._v("从数组的中间元素开始，如果中间元素正好是目标值，则搜索结束")]),s._v(" "),n("li",[s._v("如果目标值大于或者小于中间元素，则在大于或小于中间元素的那一半数组中搜索")])]),s._v(" "),n("h4",{attrs:{id:"二分搜索代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二分搜索代码实现"}},[s._v("#")]),s._v(" 二分搜索代码实现")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Array.prototype.binarySearch = function (item) {\n  let low = 0;\n  let high = this.length - 1;\n  while (low <= high) {\n    const mid = Math.floor((low + high) / 2);\n    const element = this[mid];\n    if (element < item) {\n      low = mid + 1;\n    } else if (element > item) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n  return -1;\n};\nconst arr = [1, 2, 3, 4, 5];\nconst res = arr.binarySearch(3);\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h4",{attrs:{id:"二分搜索的时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二分搜索的时间复杂度"}},[s._v("#")]),s._v(" 二分搜索的时间复杂度")]),s._v(" "),n("ul",[n("li",[s._v("每一次比较都使搜索范围缩小一半")]),s._v(" "),n("li",[s._v("时间复杂度：O(logN)")])]),s._v(" "),n("h2",{attrs:{id:"分而治之"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分而治之"}},[s._v("#")]),s._v(" 分而治之")]),s._v(" "),n("ul",[n("li",[s._v("分而治之是"),n("code",[s._v("算法设计")]),s._v("中的一种方法")]),s._v(" "),n("li",[s._v("他将一个问题"),n("code",[s._v("分")]),s._v("成多个和原问题相似的小问题，"),n("code",[s._v("递归解决")]),s._v("小问题，再将结果"),n("code",[s._v("合")]),s._v("并已以解决原来的问题")])]),s._v(" "),n("h3",{attrs:{id:"场景一-归并排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#场景一-归并排序"}},[s._v("#")]),s._v(" 场景一：归并排序")]),s._v(" "),n("ul",[n("li",[s._v("分：把数组从中间一分为二")]),s._v(" "),n("li",[s._v("解：递归地对两个子数组进行归并排序")]),s._v(" "),n("li",[s._v("合：合并有序子数组")])]),s._v(" "),n("h3",{attrs:{id:"场景二-快速排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#场景二-快速排序"}},[s._v("#")]),s._v(" 场景二：快速排序")]),s._v(" "),n("ul",[n("li",[s._v("分：选基准，按基准把数组分成两个子数组")]),s._v(" "),n("li",[s._v("解：递归地对两个子数组进行快速排序")]),s._v(" "),n("li",[s._v("合：对两个子数组进行合并")])]),s._v(" "),n("h2",{attrs:{id:"动态规划"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[s._v("#")]),s._v(" 动态规划")]),s._v(" "),n("ul",[n("li",[s._v("动态规划是"),n("code",[s._v("算法设计")]),s._v("中的一种方法")]),s._v(" "),n("li",[s._v("它将一个问题分解为"),n("code",[s._v("相互重叠")]),s._v("的子问题，通过反复求解子问题，来解决原来的问题")])]),s._v(" "),n("h3",{attrs:{id:"斐波那契数列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#斐波那契数列"}},[s._v("#")]),s._v(" 斐波那契数列")]),s._v(" "),n("ul",[n("li",[s._v("定义子问题：F(n)=F(n-1)+F(n-2)")]),s._v(" "),n("li",[s._v("反复执行：从2循环到n,执行上述公式")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bbc4bd10de614405b2760819d9e5e473~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"动态规划vs分而治之"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动态规划vs分而治之"}},[s._v("#")]),s._v(" 动态规划vs分而治之")]),s._v(" "),n("ul",[n("li",[s._v("动态规划->斐波那契")]),s._v(" "),n("li",[s._v("分而治之->反转二叉树(反转左右子树，子问题完全独立)")])]),s._v(" "),n("blockquote",[n("p",[s._v("动态规划和分而治之算法设计思想最大区别在于子问题是否是独立的，如果他们的子问题是相互重叠的，就是动态规划，如果他们的子问题是相互独立的，就是分而治之")])]),s._v(" "),n("h2",{attrs:{id:"贪心算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#贪心算法"}},[s._v("#")]),s._v(" 贪心算法")]),s._v(" "),n("ul",[n("li",[s._v("贪心算法是"),n("code",[s._v("算法设计")]),s._v("中的一种方法")]),s._v(" "),n("li",[s._v("期盼通过每个阶段的"),n("code",[s._v("局部最优")]),s._v("选择，从而达到全局的最优")]),s._v(" "),n("li",[s._v("结果并"),n("code",[s._v("不一定是最优")])])]),s._v(" "),n("h3",{attrs:{id:"零钱兑换问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#零钱兑换问题"}},[s._v("#")]),s._v(" 零钱兑换问题")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f323e973851a435da081bccd359d741d~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89275cb8c9584e859b24f06c9cf0f184~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})]),s._v(" "),n("h2",{attrs:{id:"回溯算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#回溯算法"}},[s._v("#")]),s._v(" 回溯算法")]),s._v(" "),n("ul",[n("li",[s._v("回溯算法是"),n("code",[s._v("算法设计")]),s._v("中的一种方法")]),s._v(" "),n("li",[s._v("回溯算法是一种"),n("code",[s._v("渐进式")]),s._v("寻找并构建问题解决方式的策略")]),s._v(" "),n("li",[s._v("回溯算法会先从一个可能的动作开始解决问题，如果不行，就回溯并选择另一个动作，直到将问题解决")])]),s._v(" "),n("h3",{attrs:{id:"什么问题适合用回溯算法解决"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么问题适合用回溯算法解决"}},[s._v("#")]),s._v(" 什么问题适合用回溯算法解决？")]),s._v(" "),n("ul",[n("li",[s._v("有很多路")]),s._v(" "),n("li",[s._v("这些路里，有死路，也有活路")]),s._v(" "),n("li",[s._v("通常需要递归来模拟所有的路")])]),s._v(" "),n("h3",{attrs:{id:"全排列问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全排列问题"}},[s._v("#")]),s._v(" 全排列问题")]),s._v(" "),n("ul",[n("li",[s._v("用递归模拟出所有情况")]),s._v(" "),n("li",[s._v("遇到包含重复元素的情况，就回溯")]),s._v(" "),n("li",[s._v("收集所有到达递归终点的情况，并返回")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bda26541f90e4dc2a3b8e954cd16262e~tplv-k3u1fbpfcp-watermark.awebp",alt:"img"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);